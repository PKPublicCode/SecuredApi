{
  // Important!!!!
  // This config is used for Integration and Performance tests.
  // Be careful with deleting and updating it.
  "preRequestActions": [
  ],
  "onRequestErrorActions": [
    {
      "type": "SetResponseHeader",
      "name": "X-COMMON-ON-ERROR-HEADER",
      "value": "Gateway Rejected Your Call"
    }
  ],
  "onRequestSuccessActions": [
  ],
  "routesGroups": [
    {
      "id": "602352d4-56e8-4269-965f-1290a92df903",
      "description": "Private routes subscription key authentication",
      "path": "/private_api_key",
      "preRequestActions": [
        {
          "type": "CheckSubscription",
          "subscriptionKeyHeaderName": "X-SUBSCRIPTION-KEY",
          "errorNotAuthorizedBody": "Subscription key not set or invalid",
          "errorAccessDeniedBody": "Call Not Allowed"
        },
        {
          "type": "RunConsumerActions"
        }
      ],
      "routesGroups": [
        {
          "id": "caa6ca7b-1032-4370-b236-d7fa9578e8f7",
          "description": "API with redirect",
          "path": "/redirect",
          "routes": [
            {
              "id": "d24a2d63-321d-4164-aaea-67bc1e3d87c3",
              "methods": [ "get", "post" ],
              "path": "/wildcard/*",
              "actions": [
                {
                  "type": "RemoteCall",
                  // In ComponentTests protectedEchoPath is set by appsettings json
                  "path": "$(protectedEchoPath)/@(requestRemainingPath)",
                  "method": "@(requestHttpMethod)"
                }
              ]
            }
          ]
        },
        {
          "description": "Rote group that is not allowed by existing subscriptions",
          "routes": [
            {
              "id": "efa366f9-d47a-4f5f-85be-c2192a95edfa",
              "methods": [ "get" ],
              "path": "/notallowed/wildcard/*",
              "actions": [
                {
                  "type": "RemoteCall",
                  "path": "$(protectedEchoPath)/@(requestRemainingPath)",
                  "method": "post"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "description": "Private routes subscription key authentication",
      "path": "/private_oauth",
      "preRequestActions": [
        {
          "type": "CheckEntraJwt",
          "oneOfIssuers": [ "$(AllowedEntraTokenIssuer)" ],
          "oneOfAudiences": [ "$(AllowedEntraTokenAudience)" ],
          "keepData": true
        }
      ],
      "routesGroups": [
        {
          "id": "caa6ca7b-1032-4370-b236-d7fa9578e8f7",
          "description": "API with redirect",
          "path": "/redirect",
          "routes": [
            {
              "id": "d24a2d63-321d-4164-aaea-67bc1e3d87c3",
              "methods": [ "post" ],
              "path": "/wildcard/*",
              "actions": [
                {
                  "type": "CheckEntraJwtClaims",
                  "oneOfRoles": [ "EchoSrv.Read.All" ],
                  "cleanup": true
                },
                {
                  "type": "RemoteCall",
                  // In ComponentTests protectedEchoPath is set by appsettings json
                  "path": "$(protectedEchoPath)/@(requestRemainingPath)",
                  "method": "@(requestHttpMethod)"
                }
              ]
            }
          ]
        },
        {
          "description": "Rote group that is not allowed by the configured roles",
          "routes": [
            {
              "id": "efa366f9-d47a-4f5f-85be-c2192a95edfa",
              "methods": [ "post" ],
              "path": "/notallowed/wildcard/*",
              "actions": [
                {
                  "type": "CheckEntraJwtClaims",
                  "OneOfRoles": [ "EchoSrv.Write.All" ]
                },
                {
                  "type": "RemoteCall",
                  "path": "$(protectedEchoPath)/@(requestRemainingPath)",
                  "method": "post"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "routeNotFoundActions": [
    {
      "type": "SetResponse",
      "httpCode": 404,
      "body": "Gateway route not found"
    }
  ]
}
